<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bogle.frame.admin.persistence.UserMapper" >
  <resultMap id="BaseResultMap" type="com.bogle.frame.admin.domain.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="account_non_expired" property="accountNonExpired" jdbcType="BIT" />
    <result column="account_non_locked" property="accountNonLocked" jdbcType="BIT" />
    <result column="credentials_non_expire" property="credentialsNonExpire" jdbcType="BIT" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <result column="register_time" property="registerTime" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="AssociationResultMap" type="com.bogle.frame.admin.domain.User" extends="BaseResultMap">
    <collection property="authorities" javaType="list" ofType="com.bogle.frame.admin.domain.Role" columnPrefix="role_" resultMap="com.bogle.frame.admin.persistence.RoleMapper.AssociationResultMap"/>
  </resultMap>

  <sql id="Base_Column_List" >
    id, username, password, account_non_expired, account_non_locked, credentials_non_expire, 
    enabled, register_time
  </sql>
  <sql id="Association_Column_list">
    user.id id,
    user.username,
    user.password,
    user.account_non_expired,
    user.account_non_locked,
    user.credentials_non_expire,
    user.enabled,
    user.register_time,
    role.id role_id,
    role.name role_name,
    role.authority role_authority,
    resc.id role_resc_id,
    resc.url role_resc_url,
    resc.res_type role_resc_resc_type
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="findByUsername" resultMap="AssociationResultMap" parameterType="java.lang.String" >
    SELECT
    <include refid="Association_Column_list" />
    FROM
    sys_user user
    JOIN sys_user_role user_role ON (user.id = user_role.user_id)
    JOIN sys_role role ON (user_role.role_id = role.id)
    LEFT JOIN sys_role_resc role_resc ON (role_resc.role_id = role.id)
    LEFT JOIN sys_resc resc ON (resc.id = role_resc.resc_id)
    WHERE user.username = #{username,jdbcType=VARCHAR}
    UNION
    SELECT
    <include refid="Association_Column_list" />
    FROM
    sys_user user
    JOIN sys_user_group user_group ON (user.id = user_group.user_id)
    JOIN sys_group grp ON (grp.id = user_group.group_id)
    JOIN sys_group_role group_role ON (group_role.group_id = grp.id)
    JOIN sys_role role ON (role.id = group_role.role_id)
    LEFT JOIN sys_role_resc role_resc ON (role_resc.role_id = role.id)
    LEFT JOIN sys_resc resc ON (resc.id = role_resc.resc_id)
    WHERE user.username = #{username,jdbcType=VARCHAR}
    <!--
    SELECT
      user.id id,
      user.username,
      user.password,
      user.account_non_expired,
      user.account_non_locked,
      user.credentials_non_expire,
      user.enabled,
      user.register_time,
      role.id role_id,
      role.name role_name,
      role.authority role_authority,
      resc.id role_resc_id,
      resc.url role_resc_url,
      resc.res_type role_resc_resc_type
    FROM
        sys_user user
    JOIN sys_user_role user_role ON (user.id = user_role.user_id)
    JOIN sys_role role ON (user_role.role_id = role.id)
    JOIN sys_role_resc role_resc ON (role_resc.role_id = role.id)
    JOIN sys_resc resc ON (resc.id = role_resc.resc_id)
    WHERE user.username = #{username,jdbcType=VARCHAR}
    -->
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bogle.frame.admin.domain.User" >
    insert into sys_user (id, username, password, 
      account_non_expired, account_non_locked, credentials_non_expire, 
      enabled, register_time)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{accountNonExpired,jdbcType=BIT}, #{accountNonLocked,jdbcType=BIT}, #{credentialsNonExpire,jdbcType=BIT}, 
      #{enabled,jdbcType=BIT}, #{registerTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bogle.frame.admin.domain.User"  useGeneratedKeys="true"
          keyProperty="id">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="accountNonExpired != null" >
        account_non_expired,
      </if>
      <if test="accountNonLocked != null" >
        account_non_locked,
      </if>
      <if test="credentialsNonExpire != null" >
        credentials_non_expire,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountNonExpired != null" >
        #{accountNonExpired,jdbcType=BIT},
      </if>
      <if test="accountNonLocked != null" >
        #{accountNonLocked,jdbcType=BIT},
      </if>
      <if test="credentialsNonExpire != null" >
        #{credentialsNonExpire,jdbcType=BIT},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bogle.frame.admin.domain.User" >
    update sys_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountNonExpired != null" >
        account_non_expired = #{accountNonExpired,jdbcType=BIT},
      </if>
      <if test="accountNonLocked != null" >
        account_non_locked = #{accountNonLocked,jdbcType=BIT},
      </if>
      <if test="credentialsNonExpire != null" >
        credentials_non_expire = #{credentialsNonExpire,jdbcType=BIT},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bogle.frame.admin.domain.User" >
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account_non_expired = #{accountNonExpired,jdbcType=BIT},
      account_non_locked = #{accountNonLocked,jdbcType=BIT},
      credentials_non_expire = #{credentialsNonExpire,jdbcType=BIT},
      enabled = #{enabled,jdbcType=BIT},
      register_time = #{registerTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>