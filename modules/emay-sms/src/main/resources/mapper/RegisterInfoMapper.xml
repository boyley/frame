<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bogle.frame.sms.persistence.RegisterInfoMapper" >
  <resultMap id="BaseResultMap" type="com.bogle.frame.sms.domain.RegisterInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="software_serial_no" property="softwareSerialNo" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="link_man" property="linkMan" jdbcType="VARCHAR" />
    <result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="postcode" property="postcode" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="log_id" property="logId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, software_serial_no, name, link_man, phone_num, mobile, email, fax, address, postcode, 
    register_time, log_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sms_register_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sms_register_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bogle.frame.sms.domain.RegisterInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sms_register_info (software_serial_no, name, link_man, 
      phone_num, mobile, email, 
      fax, address, postcode, 
      register_time, log_id)
    values (#{softwareSerialNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{linkMan,jdbcType=VARCHAR}, 
      #{phoneNum,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{fax,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{postcode,jdbcType=VARCHAR}, 
      #{registerTime,jdbcType=TIMESTAMP}, #{logId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.bogle.frame.sms.domain.RegisterInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sms_register_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="softwareSerialNo != null" >
        software_serial_no,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="linkMan != null" >
        link_man,
      </if>
      <if test="phoneNum != null" >
        phone_num,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="fax != null" >
        fax,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="postcode != null" >
        postcode,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="logId != null" >
        log_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="softwareSerialNo != null" >
        #{softwareSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="linkMan != null" >
        #{linkMan,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null" >
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logId != null" >
        #{logId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bogle.frame.sms.domain.RegisterInfo" >
    update sms_register_info
    <set >
      <if test="softwareSerialNo != null" >
        software_serial_no = #{softwareSerialNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="linkMan != null" >
        link_man = #{linkMan,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null" >
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logId != null" >
        log_id = #{logId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bogle.frame.sms.domain.RegisterInfo" >
    update sms_register_info
    set software_serial_no = #{softwareSerialNo,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      link_man = #{linkMan,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      log_id = #{logId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>